# virsh

> Manage virsh guest domains. (NOTE: 'guest_id' can be the id, name or UUID of the guest)
> Some subcommands such as `virsh list` have their own usage documentation
> More information: https://libvirt.org/virshcmdref.html

- Connect to a hypervisor session:

`virsh connect {string value: qemu:///system}`

- List all domains:

`virsh list --all`

- Dump guest configuration file:

`virsh dumpxml {string value: guest_id} > {string value: path/to/guest.xml}`

- Create a guest from a configuration file:

`virsh create {file value: config.xml}`

- Edit a guest's configuration file (editor can be changed with $EDITOR):

`virsh edit {string value: guest_id}`

- Start/reboot/shutdown/suspend/resume a guest:

`virsh {string value: command} {string value: guest_id}`

- Save the current state of a guest to a file:

`virsh save {string value: guest_id} {file value}`

- Delete a running guest:

`virsh destroy {string value: guest_id} && virsh undefine {string value: guest_id}`
