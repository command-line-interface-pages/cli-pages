# if

> Performs conditional processing in shell scripts
> See also: test, [
> More information: https://www.gnu.org/software/bash/manual/bash.html#Conditional-Constructs

- Execute the specified commands if the condition command's exit status is zero:

`if {string value: condition_command}; then {string value: echo "Condition is true"}; fi`

- Execute the specified commands if the condition command's exit status is not zero:

`if ! {string value: condition_command}; then {string value: echo "Condition is true"}; fi`

- Execute the first specified commands if the condition command's exit status is zero otherwise execute the second specified commands:

`if {string value: condition_command}; then {string value: echo "Condition is true"}; else {string value: echo "Condition is false"}; fi`

- Check whether a [f]ile exists:

`if [[ -f {file value} ]]; then {string value: echo "Condition is true"}; fi`

- Check whether a [d]irectory exists:

`if [[ -d {directory value} ]]; then {string value: echo "Condition is true"}; fi`

- Check whether a file or directory [e]xists:

`if [[ -e {path value} ]]; then {string value: echo "Condition is true"}; fi`

- Check whether a variable is defined:

`if [[ -n "${string value: variable}" ]]; then {string value: echo "Condition is true"}; fi`

- List all possible conditions (`test` is an alias to `[`; both are commonly used with `if`):

`man [`
