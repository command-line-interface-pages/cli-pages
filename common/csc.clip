# csc

> The Microsoft C# Compiler
> More information: https://learn.microsoft.com/dotnet/csharp/language-reference/compiler-options/command-line-building-with-csc-exe

- Compile one or more C# files to a CIL executable:

`csc {string value: path/to/input_file_a.cs} {string value: path/to/input_file_b.cs}`

- Specify the output filename:

`csc /out:{file value} {file value: input.cs}`

- Compile into a `.dll` library instead of an executable:

`csc /target:library {file value: input.cs}`

- Reference another assembly:

`csc /reference:{string value: path/to/library.dll} {file value: input.cs}`

- Embed a resource:

`csc /resource:{file value: resource} {file value: input.cs}`

- Automatically generate XML documentation:

`csc /doc:{string value: path/to/output.xml} {file value: input.cs}`

- Specify an icon:

`csc /win32icon:{string value: path/to/icon.ico} {file value: input.cs}`

- Strongly-name the resulting assembly with a keyfile:

`csc /keyfile:{string value: path/to/keyfile} {file value: input.cs}`
