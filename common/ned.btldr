# ned

> Is like `grep` but with powerful replace capabilities
> Unlike `sed`, as it isn't restricted to line oriented editing
> More information: https://github.com/nevdelap/ned

- Recursively search starting in the current directory, ignoring case:

`ned --ignore-case --recursive '{string value: ^[dl]og}' {string value: .}`

- Search always showing colored output:

`ned --colors '{string value: ^[dl]og}' {string value: .}`

- Search never showing colored output:

`ned --colors=never '{string value: ^[dl]og}' {string value: .}`

- Search ignoring certain files:

`ned --recursive --exclude '{string value: *.htm}' '{string value: ^[dl]og}' {string value: .}`

- Simple replace:

`ned '{string value: dog}' --replace '{string value: cat}' {string value: .}`

- Replace using numbered group references:

`ned '{string value: the ([a-z]+) dog and the ([a-z]+) dog}' --replace '{string value: the $2 dog and the $1 dog}' {string value: .}`

- Replace changing case:

`ned '{string value: ([a-z]+) dog}' --case-replacements --replace '{string value: \U$1\E! dog}' --stdout {string value: .}`

- Preview results of a find and replace without updating the target files:

`ned '{string value: ^[sb]ad}' --replace '{string value: happy}' --stdout {string value: .}`
