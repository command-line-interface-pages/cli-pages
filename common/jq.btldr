# jq

> A command-line JSON processor that uses a domain-specific language
> More information: https://stedolan.github.io/jq/manual/

- Execute a specific expression (print a colored and formatted json):

`{string value: cat path/to/file.json} | jq '.'`

- Execute a specific script:

`{string value: cat path/to/file.json} | jq --from-file {string value: path/to/script.jq}`

- Pass specific arguments:

`{string value: cat path/to/file.json} | jq {string value: --arg "name1" "value1" --arg "name2" "value2" ...} '{string value: . + $ARGS.named}'`

- Print specific keys:

`{string value: cat path/to/file.json} | jq '{string value: .key1, .key2, ...}'`

- Print specific array items:

`{string value: cat path/to/file.json} | jq '{string value: .[index1], .[index2], ...}'`

- Print all array items/object keys:

`{string value: cat path/to/file.json} | jq '.[]'`

- Add/remove specific keys:

`{string value: cat path/to/file.json} | jq '. {string value: +|-} {{string value: "key1": "value1", "key2": "value2", ...}}'`
