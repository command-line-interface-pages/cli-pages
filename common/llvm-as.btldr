# llvm-as

> LLVM Intermediate Representation (`.ll`) to Bitcode (`.bc`) assembler
> More information: https://llvm.org/docs/CommandGuide/llvm-as.html

- Assemble an IR file:

`llvm-as -o {string value: path/to/out.bc} {file value: sample.ll}`

- Assemble an IR file and include a module hash in the produced Bitcode file:

`llvm-as --module-hash -o {string value: path/to/out.bc} {file value: sample.ll}`

- Read an IR file from stdin and assemble it:

`cat {file value: sample.ll} | llvm-as -o {string value: path/to/out.bc}`
